{"version":3,"file":"index.mjs","sources":["../src/index.tsx"],"sourcesContent":["import type * as React from \"react\";\r\n\r\nexport function mergeRefs<T = any>(\r\n  refs: Array<React.MutableRefObject<T> | React.LegacyRef<T> | undefined | null>\r\n): React.RefCallback<T> {\r\n  return (value) => {\r\n    refs.forEach((ref) => {\r\n      if (typeof ref === \"function\") {\r\n        ref(value);\r\n      } else if (ref != null) {\r\n        (ref as React.MutableRefObject<T | null>).current = value;\r\n      }\r\n    });\r\n  };\r\n}\r\n"],"names":["mergeRefs","refs","value","ref"],"mappings":"AAEgB,SAAAA,EACdC,EACsB,CACtB,OAAQC,GAAU,CAChBD,EAAK,QAASE,GAAQ,CAChB,OAAOA,GAAQ,WACjBA,EAAID,CAAK,EACAC,GAAO,OACfA,EAAyC,QAAUD,EAExD,CAAC,CACH,CACF"}